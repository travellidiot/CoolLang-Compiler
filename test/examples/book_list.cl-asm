                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Article..vtable:        ;; virtual function table for Article
                        constant string1
                        constant Article..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant IO.in_int
                        constant IO.in_string
                        constant IO.out_int
                        constant IO.out_string
                        constant Book.initBook
                        constant Article.print
                        constant Article.initArticle
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Book..vtable:           ;; virtual function table for Book
                        constant string2
                        constant Book..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant IO.in_int
                        constant IO.in_string
                        constant IO.out_int
                        constant IO.out_string
                        constant Book.initBook
                        constant Book.print
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BookList..vtable:       ;; virtual function table for BookList
                        constant string3
                        constant BookList..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant IO.in_int
                        constant IO.in_string
                        constant IO.out_int
                        constant IO.out_string
                        constant BookList.isNil
                        constant BookList.cons
                        constant BookList.car
                        constant BookList.cdr
                        constant BookList.print_list
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Bool..vtable:           ;; virtual function table for Bool
                        constant string4
                        constant Bool..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Cons..vtable:           ;; virtual function table for Cons
                        constant string5
                        constant Cons..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant IO.in_int
                        constant IO.in_string
                        constant IO.out_int
                        constant IO.out_string
                        constant Cons.isNil
                        constant BookList.cons
                        constant Cons.car
                        constant Cons.cdr
                        constant Cons.print_list
                        constant Cons.init
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO..vtable:             ;; virtual function table for IO
                        constant string6
                        constant IO..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant IO.in_int
                        constant IO.in_string
                        constant IO.out_int
                        constant IO.out_string
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Int..vtable:            ;; virtual function table for Int
                        constant string7
                        constant Int..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main..vtable:           ;; virtual function table for Main
                        constant string8
                        constant Main..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant Main.main
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Nil..vtable:            ;; virtual function table for Nil
                        constant string9
                        constant Nil..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant IO.in_int
                        constant IO.in_string
                        constant IO.out_int
                        constant IO.out_string
                        constant Nil.isNil
                        constant BookList.cons
                        constant BookList.car
                        constant BookList.cdr
                        constant Nil.print_list
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object..vtable:         ;; virtual function table for Object
                        constant string10
                        constant Object..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String..vtable:         ;; virtual function table for String
                        constant string11
                        constant String..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant String.concat
                        constant String.length
                        constant String.substr
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Article..new:           ;; constructor for Article
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 6
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 10
                        st r0[0] <- r2
                        li r2 <- 6
                        st r0[1] <- r2
                        la r2 <- Article..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field title (String)
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        st r0[3] <- r1
                        ;; self[4] holds field author (String)
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        st r0[4] <- r1
                        ;; self[5] holds field per_title (String)
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        st r0[5] <- r1
                        ;; self[3] title initializer -- none 
                        ;; self[4] author initializer -- none 
                        ;; self[5] per_title initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Book..new:              ;; constructor for Book
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 5
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 11
                        st r0[0] <- r2
                        li r2 <- 5
                        st r0[1] <- r2
                        la r2 <- Book..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field title (String)
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        st r0[3] <- r1
                        ;; self[4] holds field author (String)
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        st r0[4] <- r1
                        ;; self[3] title initializer -- none 
                        ;; self[4] author initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BookList..new:          ;; constructor for BookList
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 3
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 12
                        st r0[0] <- r2
                        li r2 <- 3
                        st r0[1] <- r2
                        la r2 <- BookList..vtable
                        st r0[2] <- r2
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Bool..new:              ;; constructor for Bool
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 0
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- Bool..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field (raw content) (Int)
                        li r1 <- 0
                        st r0[3] <- r1
                        ;; self[3] (raw content) initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Cons..new:              ;; constructor for Cons
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 5
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 13
                        st r0[0] <- r2
                        li r2 <- 5
                        st r0[1] <- r2
                        la r2 <- Cons..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field xcar (Book)
                        li r1 <- 0
                        st r0[3] <- r1
                        ;; self[4] holds field xcdr (BookList)
                        li r1 <- 0
                        st r0[4] <- r1
                        ;; self[3] xcar initializer -- none 
                        ;; self[4] xcdr initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO..new:                ;; constructor for IO
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 3
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 14
                        st r0[0] <- r2
                        li r2 <- 3
                        st r0[1] <- r2
                        la r2 <- IO..vtable
                        st r0[2] <- r2
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Int..new:               ;; constructor for Int
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 1
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- Int..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field (raw content) (Int)
                        li r1 <- 0
                        st r0[3] <- r1
                        ;; self[3] (raw content) initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main..new:              ;; constructor for Main
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 15
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- Main..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field books (BookList)
                        li r1 <- 0
                        st r0[3] <- r1
                        ;; self[3] books initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Nil..new:               ;; constructor for Nil
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 3
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 16
                        st r0[0] <- r2
                        li r2 <- 3
                        st r0[1] <- r2
                        la r2 <- Nil..vtable
                        st r0[2] <- r2
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object..new:            ;; constructor for Object
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 3
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 17
                        st r0[0] <- r2
                        li r2 <- 3
                        st r0[1] <- r2
                        la r2 <- Object..vtable
                        st r0[2] <- r2
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String..new:            ;; constructor for String
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 3
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- String..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field (raw content) (String)
                        la r1 <- the.empty.string
                        st r0[3] <- r1
                        ;; self[3] (raw content) initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object.abort:           ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; method body begins
                        la r1 <- string12
                        syscall IO.out_string
                        syscall exit
Object.abort.end:       ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object.copy:            ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; method body begins
                        ld r2 <- r0[1]
                        alloc r1 r2
                        push r1
l1:                     bz r2 l2
                        ld r3 <- r0[0]
                        st r1[0] <- r3
                        li r3 <- 1
                        add r0 <- r0 r3
                        add r1 <- r1 r3
                        li r3 <- 1
                        sub r2 <- r2 r3
                        jmp l1
l2:                     ;; done with Object.copy loop
                        pop r1
Object.copy.end:        ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object.type_name:       ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; method body begins
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; obtain vtable for self object
                        ld r2 <- r0[2]
                        ;; look up type name at offset 0 in vtable
                        ld r2 <- r2[0]
                        st r1[3] <- r2
Object.type_name.end:   ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO.in_int:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; method body begins
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        mov r2 <- r1
                        syscall IO.in_int
                        st r2[3] <- r1
                        mov r1 <- r2
IO.in_int.end:          ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO.in_string:           ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; method body begins
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        mov r2 <- r1
                        syscall IO.in_string
                        st r2[3] <- r1
                        mov r1 <- r2
IO.in_string.end:       ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO.out_int:             ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; fp[2] holds argument x (Int)
                        ;; method body begins
                        ld r2 <- fp[2]
                        ld r1 <- r2[3]
                        syscall IO.out_int
                        mov r1 <- r0
IO.out_int.end:         ;; method body ends
                        pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO.out_string:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; fp[2] holds argument x (String)
                        ;; method body begins
                        ld r2 <- fp[2]
                        ld r1 <- r2[3]
                        syscall IO.out_string
                        mov r1 <- r0
IO.out_string.end:      ;; method body ends
                        pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Book.initBook:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; fp[3] holds argument title_p (String)
                        ;; fp[2] holds argument author_p (String)
                        ;; method body begins
                        ;; title_p
                        ld r1 <- fp[3]
                        st r0[3] <- r1
                        ;; author_p
                        ld r1 <- fp[2]
                        st r0[4] <- r1
                        mov r1 <- r0
Book.initBook.end:      ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Article.print:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; method body begins
                        ;; self@Book.print(...)
                        push r0
                        push fp
                        mov r1 <- r0
                        bnz r1 l3
                        la r1 <- string13
                        syscall IO.out_string
                        syscall exit
l3:                     push r1
                        ;; obtain vtable for class Book
                        la r2 <- Book..vtable
                        ;; look up print() at offset 10 in vtable
                        ld r2 <- r2[10]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...).out_string(...).out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string14 holds "\n"
                        la r2 <- string14
                        st r1[3] <- r2
                        push r1
                        ;; out_string(...).out_string(...)
                        push r0
                        push fp
                        ;; per_title
                        ld r1 <- r0[5]
                        push r1
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string15 holds "periodical:  "
                        la r2 <- string15
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Article
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        bnz r1 l4
                        la r1 <- string16
                        syscall IO.out_string
                        syscall exit
l4:                     push r1
                        ;; obtain vtable from object in r1 with static type SELF_TYPE
                        ld r2 <- r1[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        bnz r1 l5
                        la r1 <- string16
                        syscall IO.out_string
                        syscall exit
l5:                     push r1
                        ;; obtain vtable from object in r1 with static type SELF_TYPE
                        ld r2 <- r1[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        mov r1 <- r0
Article.print.end:      ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Article.initArticle:    ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; self[5] holds field per_title (String)
                        ;; fp[4] holds argument title_p (String)
                        ;; fp[3] holds argument author_p (String)
                        ;; fp[2] holds argument per_title_p (String)
                        ;; method body begins
                        ;; initBook(...)
                        push r0
                        push fp
                        ;; title_p
                        ld r1 <- fp[4]
                        push r1
                        ;; author_p
                        ld r1 <- fp[3]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Article
                        ld r2 <- r0[2]
                        ;; look up initBook() at offset 9 in vtable
                        ld r2 <- r2[9]
                        call r2
                        pop fp
                        pop r0
                        ;; per_title_p
                        ld r1 <- fp[2]
                        st r0[5] <- r1
                        mov r1 <- r0
Article.initArticle.end:;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Book.print:             ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field title (String)
                        ;; self[4] holds field author (String)
                        ;; method body begins
                        ;; out_string(...).out_string(...).out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string14 holds "\n"
                        la r2 <- string14
                        st r1[3] <- r2
                        push r1
                        ;; out_string(...).out_string(...)
                        push r0
                        push fp
                        ;; title
                        ld r1 <- r0[3]
                        push r1
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string17 holds "title:      "
                        la r2 <- string17
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Book
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        bnz r1 l6
                        la r1 <- string18
                        syscall IO.out_string
                        syscall exit
l6:                     push r1
                        ;; obtain vtable from object in r1 with static type SELF_TYPE
                        ld r2 <- r1[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        bnz r1 l7
                        la r1 <- string18
                        syscall IO.out_string
                        syscall exit
l7:                     push r1
                        ;; obtain vtable from object in r1 with static type SELF_TYPE
                        ld r2 <- r1[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...).out_string(...).out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string14 holds "\n"
                        la r2 <- string14
                        st r1[3] <- r2
                        push r1
                        ;; out_string(...).out_string(...)
                        push r0
                        push fp
                        ;; author
                        ld r1 <- r0[4]
                        push r1
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string19 holds "author:     "
                        la r2 <- string19
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Book
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        bnz r1 l8
                        la r1 <- string20
                        syscall IO.out_string
                        syscall exit
l8:                     push r1
                        ;; obtain vtable from object in r1 with static type SELF_TYPE
                        ld r2 <- r1[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        bnz r1 l9
                        la r1 <- string20
                        syscall IO.out_string
                        syscall exit
l9:                     push r1
                        ;; obtain vtable from object in r1 with static type SELF_TYPE
                        ld r2 <- r1[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        mov r1 <- r0
Book.print.end:         ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BookList.isNil:         ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; abort(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type BookList
                        ld r2 <- r0[2]
                        ;; look up abort() at offset 2 in vtable
                        ld r2 <- r2[2]
                        call r2
                        pop fp
                        pop r0
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
BookList.isNil.end:     ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BookList.cons:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 2
                        li r2 <- 2
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument hd (Book)
                        ;; method body begins
                        ;; fp[0] holds local new_cell (Cons)
                        ;; new Cons
                        push fp
                        push r0
                        la r2 <- Cons..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; new_cell.init(...)
                        push r0
                        push fp
                        ;; hd
                        ld r1 <- fp[2]
                        push r1
                        mov r1 <- r0
                        push r1
                        ;; new_cell
                        ld r1 <- fp[0]
                        bnz r1 l10
                        la r1 <- string21
                        syscall IO.out_string
                        syscall exit
l10:                    push r1
                        ;; obtain vtable from object in r1 with static type Cons
                        ld r2 <- r1[2]
                        ;; look up init() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
BookList.cons.end:      ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BookList.car:           ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; abort(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type BookList
                        ld r2 <- r0[2]
                        ;; look up abort() at offset 2 in vtable
                        ld r2 <- r2[2]
                        call r2
                        pop fp
                        pop r0
                        ;; new Book
                        push fp
                        push r0
                        la r2 <- Book..new
                        call r2
                        pop r0
                        pop fp
BookList.car.end:       ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BookList.cdr:           ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; abort(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type BookList
                        ld r2 <- r0[2]
                        ;; look up abort() at offset 2 in vtable
                        ld r2 <- r2[2]
                        call r2
                        pop fp
                        pop r0
                        ;; new BookList
                        push fp
                        push r0
                        la r2 <- BookList..new
                        call r2
                        pop r0
                        pop fp
BookList.cdr.end:       ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
BookList.print_list:    ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; abort(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type BookList
                        ld r2 <- r0[2]
                        ;; look up abort() at offset 2 in vtable
                        ld r2 <- r2[2]
                        call r2
                        pop fp
                        pop r0
BookList.print_list.end:;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Cons.isNil:             ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field xcar (Book)
                        ;; self[4] holds field xcdr (BookList)
                        ;; method body begins
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
Cons.isNil.end:         ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Cons.car:               ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field xcar (Book)
                        ;; self[4] holds field xcdr (BookList)
                        ;; method body begins
                        ;; xcar
                        ld r1 <- r0[3]
Cons.car.end:           ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Cons.cdr:               ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field xcar (Book)
                        ;; self[4] holds field xcdr (BookList)
                        ;; method body begins
                        ;; xcdr
                        ld r1 <- r0[4]
Cons.cdr.end:           ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Cons.print_list:        ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 2
                        li r2 <- 2
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field xcar (Book)
                        ;; self[4] holds field xcdr (BookList)
                        ;; method body begins
                        ;; case expression begins
                        ;; xcar.print(...)
                        push r0
                        push fp
                        ;; xcar
                        ld r1 <- r0[3]
                        bnz r1 l11
                        la r1 <- string22
                        syscall IO.out_string
                        syscall exit
l11:                    push r1
                        ;; obtain vtable from object in r1 with static type Book
                        ld r2 <- r1[2]
                        ;; look up print() at offset 10 in vtable
                        ld r2 <- r2[10]
                        call r2
                        pop fp
                        pop r0
                        bz r1 l12
                        st fp[0] <- r1
                        ld r1 <- r1[0]
                        ;; case Book will jump to l13
                        ;; case Article will jump to l14
                        ;; case expression: compare type tags
                        li r2 <- 10
                        beq r1 r2 l14
                        li r2 <- 11
                        beq r1 r2 l13
                        li r2 <- 12
                        beq r1 r2 l15
                        li r2 <- 0
                        beq r1 r2 l15
                        li r2 <- 13
                        beq r1 r2 l15
                        li r2 <- 14
                        beq r1 r2 l15
                        li r2 <- 1
                        beq r1 r2 l15
                        li r2 <- 15
                        beq r1 r2 l15
                        li r2 <- 16
                        beq r1 r2 l15
                        li r2 <- 17
                        beq r1 r2 l15
                        li r2 <- 3
                        beq r1 r2 l15
l15:                    ;; case expression: error case
                        la r1 <- string23
                        syscall IO.out_string
                        syscall exit
l12:                    ;; case expression: void case
                        la r1 <- string24
                        syscall IO.out_string
                        syscall exit
                        ;; case expression: branches
l13:                    ;; fp[0] holds case dummy (Book)
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string25 holds "- dynamic type was B..."
                        la r2 <- string25
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Cons
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l16
l14:                    ;; fp[0] holds case dummy (Article)
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string26 holds "- dynamic type was A..."
                        la r2 <- string26
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Cons
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l16
l16:                    ;; case expression ends
                        ;; xcdr.print_list(...)
                        push r0
                        push fp
                        ;; xcdr
                        ld r1 <- r0[4]
                        bnz r1 l17
                        la r1 <- string27
                        syscall IO.out_string
                        syscall exit
l17:                    push r1
                        ;; obtain vtable from object in r1 with static type BookList
                        ld r2 <- r1[2]
                        ;; look up print_list() at offset 13 in vtable
                        ld r2 <- r2[13]
                        call r2
                        pop fp
                        pop r0
Cons.print_list.end:    ;; method body ends
                        pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Cons.init:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field xcar (Book)
                        ;; self[4] holds field xcdr (BookList)
                        ;; fp[3] holds argument hd (Book)
                        ;; fp[2] holds argument tl (BookList)
                        ;; method body begins
                        ;; hd
                        ld r1 <- fp[3]
                        st r0[3] <- r1
                        ;; tl
                        ld r1 <- fp[2]
                        st r0[4] <- r1
                        mov r1 <- r0
Cons.init.end:          ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main.main:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field books (BookList)
                        ;; method body begins
                        ;; fp[0] holds local a_book (Book)
                        ;; new Book.initBook(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string28 holds "Compilers, Principle..."
                        la r2 <- string28
                        st r1[3] <- r2
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string29 holds "Aho, Sethi, and Ullm..."
                        la r2 <- string29
                        st r1[3] <- r2
                        push r1
                        ;; new Book
                        push fp
                        push r0
                        la r2 <- Book..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l18
                        la r1 <- string30
                        syscall IO.out_string
                        syscall exit
l18:                    push r1
                        ;; obtain vtable from object in r1 with static type Book
                        ld r2 <- r1[2]
                        ;; look up initBook() at offset 9 in vtable
                        ld r2 <- r2[9]
                        call r2
                        pop fp
                        pop r0
                        st fp[0] <- r1
                        ;; fp[-1] holds local an_article (Article)
                        ;; new Article.initArticle(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string31 holds "The Top 100 CD_ROMs"
                        la r2 <- string31
                        st r1[3] <- r2
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string32 holds "Ulanoff"
                        la r2 <- string32
                        st r1[3] <- r2
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string33 holds "PC Magazine"
                        la r2 <- string33
                        st r1[3] <- r2
                        push r1
                        ;; new Article
                        push fp
                        push r0
                        la r2 <- Article..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l19
                        la r1 <- string34
                        syscall IO.out_string
                        syscall exit
l19:                    push r1
                        ;; obtain vtable from object in r1 with static type Article
                        ld r2 <- r1[2]
                        ;; look up initArticle() at offset 11 in vtable
                        ld r2 <- r2[11]
                        call r2
                        pop fp
                        pop r0
                        st fp[-1] <- r1
                        ;; new Nil.cons(...).cons(...)
                        push r0
                        push fp
                        ;; an_article
                        ld r1 <- fp[-1]
                        push r1
                        ;; new Nil.cons(...)
                        push r0
                        push fp
                        ;; a_book
                        ld r1 <- fp[0]
                        push r1
                        ;; new Nil
                        push fp
                        push r0
                        la r2 <- Nil..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l20
                        la r1 <- string35
                        syscall IO.out_string
                        syscall exit
l20:                    push r1
                        ;; obtain vtable from object in r1 with static type Nil
                        ld r2 <- r1[2]
                        ;; look up cons() at offset 10 in vtable
                        ld r2 <- r2[10]
                        call r2
                        pop fp
                        pop r0
                        bnz r1 l21
                        la r1 <- string35
                        syscall IO.out_string
                        syscall exit
l21:                    push r1
                        ;; obtain vtable from object in r1 with static type Cons
                        ld r2 <- r1[2]
                        ;; look up cons() at offset 10 in vtable
                        ld r2 <- r2[10]
                        call r2
                        pop fp
                        pop r0
                        st r0[3] <- r1
                        ;; books.print_list(...)
                        push r0
                        push fp
                        ;; books
                        ld r1 <- r0[3]
                        bnz r1 l22
                        la r1 <- string36
                        syscall IO.out_string
                        syscall exit
l22:                    push r1
                        ;; obtain vtable from object in r1 with static type BookList
                        ld r2 <- r1[2]
                        ;; look up print_list() at offset 13 in vtable
                        ld r2 <- r2[13]
                        call r2
                        pop fp
                        pop r0
Main.main.end:          ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Nil.isNil:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
Nil.isNil.end:          ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Nil.print_list:         ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
Nil.print_list.end:     ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String.concat:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument s (String)
                        ;; method body begins
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        mov r3 <- r1
                        ld r2 <- fp[2]
                        ld r2 <- r2[3]
                        ld r1 <- r0[3]
                        syscall String.concat
                        st r3[3] <- r1
                        mov r1 <- r3
String.concat.end:      ;; method body ends
                        pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String.length:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        mov r2 <- r1
                        ld r1 <- r0[3]
                        syscall String.length
                        st r2[3] <- r1
                        mov r1 <- r2
String.length.end:      ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String.substr:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; fp[3] holds argument i (Int)
                        ;; fp[2] holds argument l (Int)
                        ;; method body begins
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        mov r3 <- r1
                        ld r2 <- fp[2]
                        ld r2 <- r2[3]
                        ld r1 <- fp[3]
                        ld r1 <- r1[3]
                        ld r0 <- r0[3]
                        syscall String.substr
                        bnz r1 l23
                        la r1 <- string37
                        syscall IO.out_string
                        syscall exit
l23:                    st r3[3] <- r1
                        mov r1 <- r3
String.substr.end:      ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;; global string constants
the.empty.string:       constant ""
string1:                constant "Article"
string2:                constant "Book"
string3:                constant "BookList"
string4:                constant "Bool"
string5:                constant "Cons"
string6:                constant "IO"
string7:                constant "Int"
string8:                constant "Main"
string9:                constant "Nil"
string10:               constant "Object"
string11:               constant "String"
string12:               constant "abort\n"
string13:               constant "ERROR: 38: Exception: dispatch on void\n"
string14:               constant "\n"
string15:               constant "periodical:  "
string16:               constant "ERROR: 39: Exception: dispatch on void\n"
string17:               constant "title:      "
string18:               constant "ERROR: 17: Exception: dispatch on void\n"
string19:               constant "author:     "
string20:               constant "ERROR: 18: Exception: dispatch on void\n"
string21:               constant "ERROR: 54: Exception: dispatch on void\n"
string22:               constant "ERROR: 95: Exception: dispatch on void\n"
string23:               constant "ERROR: 95: Exception: case without matching branch\n"
string24:               constant "ERROR: 95: Exception: case on void\n"
string25:               constant "- dynamic type was Book -\n"
string26:               constant "- dynamic type was Article -\n"
string27:               constant "ERROR: 99: Exception: dispatch on void\n"
string28:               constant "Compilers, Principles, Techniques, and Tools"
string29:               constant "Aho, Sethi, and Ullman"
string30:               constant "ERROR: 117: Exception: dispatch on void\n"
string31:               constant "The Top 100 CD_ROMs"
string32:               constant "Ulanoff"
string33:               constant "PC Magazine"
string34:               constant "ERROR: 121: Exception: dispatch on void\n"
string35:               constant "ERROR: 126: Exception: dispatch on void\n"
string36:               constant "ERROR: 127: Exception: dispatch on void\n"
string37:               constant "ERROR: 0: Exception: String.substr out of range\n"
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
eq_handler:             ;; helper function for =
                        mov fp <- sp
                        pop r0
                        push ra
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        beq r1 r2 eq_true
                        li r3 <- 0
                        beq r1 r3 eq_false
                        beq r2 r3 eq_false
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        ;; place the sum of the type tags in r1
                        add r1 <- r1 r2
                        li r2 <- 0
                        beq r1 r2 eq_bool
                        li r2 <- 2
                        beq r1 r2 eq_int
                        li r2 <- 6
                        beq r1 r2 eq_string
                        ;; otherwise, use pointer comparison
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        beq r1 r2 eq_true
eq_false:               ;; not equal
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        jmp eq_end
eq_true:                ;; equal
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        jmp eq_end
eq_bool:                ;; two Bools
eq_int:                 ;; two Ints
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        beq r1 r2 eq_true
                        jmp eq_false
eq_string:              ;; two Strings
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        beq r1 r2 eq_true
                        jmp eq_false
eq_end:                 pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
le_handler:             ;; helper function for <=
                        mov fp <- sp
                        pop r0
                        push ra
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        beq r1 r2 le_true
                        li r3 <- 0
                        beq r1 r3 le_false
                        beq r2 r3 le_false
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        ;; place the sum of the type tags in r1
                        add r1 <- r1 r2
                        li r2 <- 0
                        beq r1 r2 le_bool
                        li r2 <- 2
                        beq r1 r2 le_int
                        li r2 <- 6
                        beq r1 r2 le_string
                        ;; for non-primitives, equality is our only hope
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        beq r1 r2 le_true
le_false:               ;; not less-than-or-equal
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        jmp le_end
le_true:                ;; less-than-or-equal
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        jmp le_end
le_bool:                ;; two Bools
le_int:                 ;; two Ints
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        ble r1 r2 le_true
                        jmp le_false
le_string:              ;; two Strings
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        ble r1 r2 le_true
                        jmp le_false
le_end:                 pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
lt_handler:             ;; helper function for <
                        mov fp <- sp
                        pop r0
                        push ra
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        li r3 <- 0
                        beq r1 r3 lt_false
                        beq r2 r3 lt_false
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        ;; place the sum of the type tags in r1
                        add r1 <- r1 r2
                        li r2 <- 0
                        beq r1 r2 lt_bool
                        li r2 <- 2
                        beq r1 r2 lt_int
                        li r2 <- 6
                        beq r1 r2 lt_string
                        ;; for non-primitives, < is always false
lt_false:               ;; not less than
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        jmp lt_end
lt_true:                ;; less than
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        jmp lt_end
lt_bool:                ;; two Bools
lt_int:                 ;; two Ints
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        blt r1 r2 lt_true
                        jmp lt_false
lt_string:              ;; two Strings
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        blt r1 r2 lt_true
                        jmp lt_false
lt_end:                 pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
start:                  ;; program begins here
                        la r2 <- Main..new
                        push fp
                        call r2
                        push fp
                        push r1
                        la r2 <- Main.main
                        call r2
                        syscall exit
